@using JitDalshe.Ui.Admin.Components.Shared.Cards
@using JitDalshe.Ui.Admin.Models
@using JitDalshe.Ui.Admin.Services.ModalService
@using JitDalshe.Ui.Admin.Services.NewsService
@inject IToastService ToastService
@inject IModalService ModalService
@inject INewsService NewsService

<Card HeaderText="@CardHeaderText"
      Title="@News.Title"
      Buttons="Card.Button.Info | Card.Button.Edit | Card.Button.Delete"
      OnInfoButtonClick="@ShowInfoModalAsync"
      OnEditButtonClick="@ShowEditModalAsync"
      OnDeleteButtonClick="@DeleteNewsAsync"/>

<InfoNewsModal News="News" Id="@InfoModalId"/>
<EditNewsModal News="News" Id="@EditModalId" OnNewsEditedCallback="OnNewsEditedCallback"/>

@code {

    private string CardHeaderText => $"{News.PublishDate.ToString("dd-MM-yyyy")} ({News.DisplayingStatus})";
    private string InfoModalId => $"modal_info_news_{News.Id}";
    private string EditModalId => $"modal_edit_news_{News.Id}";

    [Parameter] public required News News { get; init; }
    [Parameter] public required EventCallback OnNewsEditedCallback { get; init; }
    [Parameter] public required EventCallback OnNewsDeletedCallback { get; init; }

    private Task ShowInfoModalAsync()
        => ModalService.ShowModalAsync($"#{InfoModalId}");

    private Task ShowEditModalAsync()
        => ModalService.ShowModalAsync($"#{EditModalId}");

    private async Task DeleteNewsAsync()
    {
        if (await NewsService.DeleteAsync(News.Id))
        {
            ToastService.ShowSuccess("Новость успешно удалена!");
            await OnNewsDeletedCallback.InvokeAsync();
        }
    }

}