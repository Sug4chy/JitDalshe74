@using System.Net
@using JitDalshe.Ui.Admin.Api.News
@using JitDalshe.Ui.Admin.Models
@inject IJSRuntime JsRuntime
@inject INewsApiClient NewsApiClient

<div class="card mb-3">
    <div class="card-header">
        @News.PublishDate.ToString("dd-MM-yyyy")
    </div>
    <div class="card-body">
        <h5 class="card-title">@News.Title</h5>
    </div>
    <div class="card-footer">
        <div class="d-flex footer-buttons">
            <button type="button"
                    class="btn btn-primary"
                    data-toggle="modal"
                    data-target="@InfoModalId"
                    @onclick="ShowInfoModalAsync">
                Подробнее
            </button>
            <button type="button"
                    class="btn btn-secondary"
                    data-toggle="modal"
                    data-target="@EditModalId"
                    @onclick="ShowEditModalAsync">
                Изменить
            </button>
            <button type="button"
                    class="btn btn-danger"
                    @onclick="DeleteNewsAsync">
                Удалить
            </button>
        </div>
    </div>
</div>

<NewsInfoModal News="News" Id="@InfoModalId[1..]"/>
<NewsEditModal News="News" Id="@EditModalId[1..]" OnNewsEditedCallback="OnNewsEditedCallback"/>

@code {
    private string InfoModalId => $"#modal_{News.Id}";
    private string EditModalId => $"#modal_edit_{News.Id}";

    [Parameter] public required News News { get; init; }
    [Parameter] public required EventCallback OnNewsEditedCallback { get; init; }

    private async Task ShowInfoModalAsync()
    {
        await JsRuntime.InvokeVoidAsync("showModal", InfoModalId);
    }

    private async Task ShowEditModalAsync()
    {
        await JsRuntime.InvokeVoidAsync("showModal", EditModalId);
    }

    private async Task DeleteNewsAsync()
    {
        try
        {
            var response = await NewsApiClient.DeleteNewsByIdAsync(News.Id);
            if (response.StatusCode is HttpStatusCode.NoContent)
            {
            
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }
}