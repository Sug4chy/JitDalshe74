<div id="@Id"
     class="modal fade"
     tabindex="-1"
     role="dialog"
     data-backdrop="@(Static ? "static" : null)"
     data-keyboard="@(Static ? "false" : "true")">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">@Title</h5>
                <button type="button"
                        class="close"
                        data-dismiss="modal"
                        aria-label="Close"
                        @onclick="OnClose">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @ChildContent
            </div>
            <div class="modal-footer @FooterClass(FooterContentPosition)">
                @if (Footer.HasFlag(FooterType.Text))
                {
                    @FooterText
                }

                @if (Footer.HasFlag(FooterType.Button))
                {
                    <button class="btn btn-primary"
                            type="button"
                            @onclick="OnFooterButtonClick">
                        @FooterButtonText
                    </button>
                }
            </div>
        </div>
    </div>
</div>

@code {

    [Parameter] public required string Id { get; init; }
    [Parameter] public bool Static { get; init; }
    [Parameter] public required string Title { get; init; }
    [Parameter] public EventCallback OnClose { get; init; } = EventCallback.Empty;
    [Parameter] public RenderFragment? ChildContent { get; init; }
    [Parameter] public FooterPositioning? FooterContentPosition { get; init; }
    [Parameter] public FooterType Footer { get; init; }
    [Parameter] public string? FooterText { get; init; }
    [Parameter] public string? FooterButtonText { get; init; }
    [Parameter] public EventCallback OnFooterButtonClick { get; init; } = EventCallback.Empty;

    [Flags]
    public enum FooterType
    {
        Text = 1,
        Button = 2
    }

    public enum FooterPositioning
    {
        Start,
        SpaceBetween
    }

    private static string? FooterClass(FooterPositioning? positioning)
        => positioning switch
        {
            FooterPositioning.Start => "modal-footer-start",
            FooterPositioning.SpaceBetween => "modal-footer-space-between",
            _ => null
        };

}