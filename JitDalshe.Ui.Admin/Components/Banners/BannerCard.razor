@using JitDalshe.Ui.Admin.Components.Shared.Cards
@using JitDalshe.Ui.Admin.Models
@using JitDalshe.Ui.Admin.Services.BannerService
@using JitDalshe.Ui.Admin.Services.ModalService
@inject IModalService ModalService
@inject IBannerService BannerService
@inject IToastService ToastService

<Card HeaderText="@HeaderText"
      Title="@Banner.Title"
      Buttons="Card.Button.Info | Card.Button.Edit | Card.Button.Delete"
      OnInfoButtonClick="@ShowInfoModalAsync"
      OnEditButtonClick="@ShowEditModalAsync"
      OnDeleteButtonClick="@DeleteBannerAsync"/>

<InfoBannerModal Id="@InfoModalId" Banner="@Banner"/>
<EditBannerModal Id="@EditModalId" Banner="@Banner"/>

@code {

    private string HeaderText => Banner.DisplayOrder is not null
        ? $"Отображается {Banner.DisplayOrder.Value}-м по порядку"
        : "Не отображается";

    private string InfoModalId => $"modal_info_banner_{Banner.Id}";
    private string EditModalId => $"modal_edit_banner_{Banner.Id}";

    [Parameter] public required Banner Banner { get; init; }
    [Parameter] public required EventCallback BannerEdited { get; init; }
    [Parameter] public required EventCallback BannerDeleted { get; init; }

    private Task ShowInfoModalAsync()
        => ModalService.ShowModalAsync($"#{InfoModalId}");

    private Task ShowEditModalAsync()
        => ModalService.ShowModalAsync($"#{EditModalId}");

    private async Task DeleteBannerAsync()
    {
        if (await BannerService.DeleteBannerAsync(Banner.Id))
        {
            ToastService.ShowSuccess("Баннер успешно удалён!");
            await BannerDeleted.InvokeAsync();
        }
    }

}