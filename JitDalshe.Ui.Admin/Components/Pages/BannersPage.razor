@page "/banners"
@using JitDalshe.Ui.Admin.Models
@using JitDalshe.Ui.Admin.Components.Banners
@using JitDalshe.Ui.Admin.Services.BannerService
@using JitDalshe.Ui.Admin.Services.ModalService
@inject IModalService ModalService
@inject IBannerService BannerService

<PageTitle>Баннеры</PageTitle>

<h1 class="mb-4">Баннеры</h1>

<h2>Предпросмотр активных баннеров</h2>

<main class="main-slider-container">
    <BannersSlider Items="@_previewBanners"/>
</main>

<div class="topbar-container">
    <h2>Полный список баннеров</h2>
    <button class="btn btn-secondary btn-show-create-modal"
            @onclick="ShowCreateBannerModalAsync">
        + Добавить
    </button>
</div>

@if (_banners is not null)
{
    @foreach (var banner in _banners)
    {
        <BannerCard Banner="banner"/>
    }
}
else
{
    <p>Loading...</p>
}

<CreateBannerModal Id="@CreateBannerModalId" BannerCreated="@OnInitializedAsync"/>

@code {

    private const string CreateBannerModalId = "modal_create_banner";

    private PreviewBanner[] _previewBanners = null!;

    private Banner[] _banners = null!;

    private Task ShowCreateBannerModalAsync()
        => ModalService.ShowModalAsync($"#{CreateBannerModalId}");

    private async Task LoadPreviewBannersAsync()
    {
        _previewBanners = await BannerService.FindPreviewBannersAsync();
    }

    private async Task LoadBannersAsync()
    {
        _banners = await BannerService.FindAllAsync();
    }

    private async Task LoadAllBanners()
    {
        await LoadPreviewBannersAsync();
        await LoadBannersAsync();
    }

    protected override async Task OnInitializedAsync()
    {
        await LoadAllBanners();
    }

}