@page "/events"
@using System.Net
@using JitDalshe.Ui.Admin.Api.Events
@using JitDalshe.Ui.Admin.Models
@using JitDalshe.Ui.Admin.Components.Events
@using JitDalshe.Ui.Admin.Extensions
@inject IEventsApiClient EventsApiClient
@inject IToastService ToastService

<PageTitle>События</PageTitle>

<div style="display: flex; justify-content: space-between; align-content: center">
    <h1>События</h1>
    <button class="btn btn-secondary">
        <svg xmlns="http://www.w3.org/2000/svg" 
             width="16" 
             height="16" 
             fill="currentColor" 
             class="bi bi-plus" 
             viewBox="0 0 16 16">
            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4"/>
        </svg> Добавить
    </button>
</div>
@if (_events is not null)
{
    @foreach (var eventItem in _events)
    {
        <EventCard Event="eventItem"/>
    }
}
else
{
    <p>Loading...</p>
}

@code {
    private Event[] _events = null!;

    private async Task LoadEventsAsync()
    {
        try
        {
            var response = await EventsApiClient.ListEventsAsync();
            if (response.StatusCode is HttpStatusCode.OK)
            {
                _events = response.Content!;
            }
            else
            {
                var error = response.Error!.DeserializeError();
                ToastService.ShowError(error.Message);
                _events = [];
            }
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    protected override Task OnInitializedAsync()
        => LoadEventsAsync();

}